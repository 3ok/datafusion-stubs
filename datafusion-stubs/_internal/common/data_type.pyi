from __future__ import annotations

import enum

class RexType(enum.Enum):
    Alias = ...
    Literal = ...
    Call = ...
    Reference = ...
    ScalarSubquery = ...
    Other = ...

class DataTypeMap:
    def __init__(
        self, arrow_type: DataType, python_type: PythonType, sql_type: SqlType
    ) -> None: ...
    @property
    def arrow_type(self) -> DataType: ...
    @property
    def python_type(self) -> PythonType: ...
    @property
    def sql_type(self) -> SqlType: ...
    @staticmethod
    def from_parquet_type_str(parquet_str_type: str) -> DataTypeMap: ...
    @staticmethod
    def arrow(arow_type: DataType) -> DataTypeMap: ...
    @staticmethod
    def arrow_str(arrow_type_str: str) -> DataTypeMap: ...
    @staticmethod
    def sql(sql_type: SqlType) -> DataTypeMap: ...
    def friendly_arrow_type_name(self) -> str: ...

class DataType: ...

class PythonType(enum.Enum):
    Array = ...
    Bool = ...
    Bytes = ...
    Datetime = ...
    Float = ...
    Int = ...
    List = ...
    Object = ...
    Str = ...
    # None: ...  # I can't find a way to represent PythonType.None in the stubs

class SqlType(enum.Enum):
    ANY = ...
    ARRAY = ...
    BIGINT = ...
    BINARY = ...
    BOOLEAN = ...
    CHAR = ...
    COLUMN_LIST = ...
    CURSOR = ...
    DATE = ...
    DECIMAL = ...
    DISTINCT = ...
    DOUBLE = ...
    DYNAMIC_STAR = ...
    FLOAT = ...
    GEOMETRY = ...
    INTEGER = ...
    INTERVAL = ...
    INTERVAL_DAY = ...
    INTERVAL_DAY_HOUR = ...
    INTERVAL_DAY_MINUTE = ...
    INTERVAL_DAY_SECOND = ...
    INTERVAL_HOUR = ...
    INTERVAL_HOUR_MINUTE = ...
    INTERVAL_HOUR_SECOND = ...
    INTERVAL_MINUTE = ...
    INTERVAL_MINUTE_SECOND = ...
    INTERVAL_MONTH = ...
    INTERVAL_SECOND = ...
    INTERVAL_YEAR = ...
    INTERVAL_YEAR_MONTH = ...
    MAP = ...
    MULTISET = ...
    NULL = ...
    OTHER = ...
    REAL = ...
    ROW = ...
    SARG = ...
    SMALLINT = ...
    STRUCTURED = ...
    SYMBOL = ...
    TIME = ...
    TIME_WITH_LOCAL_TIME_ZONE = ...
    TIMESTAMP = ...
    TIMESTAMP_WITH_LOCAL_TIME_ZONE = ...
    TINYINT = ...
    UNKNOWN = ...
    VARBINARY = ...
    VARCHAR = ...
